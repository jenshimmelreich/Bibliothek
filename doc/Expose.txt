ExposéDissertationsprojektDie agile Wende in der SoftwareentwicklungJens HimmelreichProblemstellungDas Dissertationsprojekt setzt sich mit einer grundlegenden Veränderung im Feld des Softwareengineering auseinander. Softwareengineering ist die Disziplin, die sich mit der Methodik der Softwareentwicklung beschäftigt. Die Disziplin wurde auf einer Konferenz der NATO unter dem Titel Software Engineering im Jahre 1968 in Garmisch-Partenkirchen begründet (Naur 1968). Das vorherrschende Modell für die Softwareentwicklung war seitdem das sogenannte Wasserfallmodell (Royce 1970).1 Das Modell geht davon aus, dass sich der Prozess der Erstellung von Software in unterschiedliche Phasen unterteilen lässt, die aufeinander folgen. In den 90er Jahren des letzten Jahrhunderts bildeten sich unterschiedliche Schulen heraus, die das Modell in Frage stellten. Im Jahre 2001 verfassten 17 Vertreter dieser Schulen gemeinsam das Agile Manifest (Beck 2001). Das Manifest formuliert vier Werte und 12 Prinzipien, die den verschiedenen Schulen gemein sind. Mit dem Manifest entstand die Strömung der agilen Softwareentwicklung. Im Jahre 2006 formulierte Diana Larsen, eine der führenden Persönlichkeiten der Strömung, die agilen Methoden seien im Mainstream der Softwareentwicklung angekommen: „Agile methods will also continue to spread into new arenas. Leaders in our community contend that Agile methods have „crossed the chasm” to become a respectable alternative for managing and working in software projects.“ (Larsen 2006) Agile Methoden werden mittlerweile auch von großen Firmen eingesetzt: SAP setzt Scrum, eine der agilen Methoden, als Methodik ein und hat in den letzten Jahren Hunderte Scrum-Master - eine Rolle innerhalb der Methodik - ausgebildet. Die Allianz unterhält in München ein eigenes Scrum-Center, um die Einführung der neuen Methode zu unterstützen. Das amtliche Softwareentwicklungsmodell, das vom Beauftragten der Bundesregierung für Informationstechnik bereitgestellte V-Modell XT (v-modell-xt) - entwickelt sein Vorgängermodell in Richtung agiler Ansätze weiter.Die vier Werte des Agilen Manifestes charakterisieren den agilen Ansatz in der Softwareentwicklung. Die vier Werte sind: Individuen und Interaktionen, funktionierende Software, Zusammenarbeit mit dem Kunden, Reagieren auf Veränderung.2 Die Methodik ist durch eine inkrementelle Vorgehensweise, die durch permanente Kommunikation rückgekoppelt wird, gekennzeichnet. Inkrementelle Vorgehensweise drückt aus, dass alle Phasen der Softwareentwicklung, die im Wasserfallmodell streng linearisiert sind, immer wieder durchschritten werden. Wie genau die Steuerung erfolgt und welche Phasen es gibt, unterscheidet sich von Methode zu Methode. Sich selbst organisierende Teams stehen bei allen Methoden im Mittelpunkt der Softwareentwicklung. Einige Methoden betonen die Programmierung stärker (Beck 2000), andere rücken den Managementprozess in den Mittelpunkt (Schwaber 2001). Das Manifest balanciert das Verhältnis der beiden Elemente aus. Dieses Verhältnis ist spannungsreich und sorgt innerhalb der agilen Welt immer wieder für Auseinandersetzungen.Die agile Wende in der Softwareentwicklung hat eine neue Art und Weise etabliert, über Softwareentwicklung zu sprechen. Sie hat neue Rituale in das Feld des Softwareentwicklung eingeführt. Und sie hat einen neuen Typus von Softwareentwickelndem geschaffen. Diese Veränderungen zu verstehen ist das Erkenntnisinteresse meiner Arbeit. Stand der ForschungIch kenne kein Forschungsprojekt im deutschen oder englischen Sprachraum, das sich im Schwerpunkt mit der agilen Softwareentwicklung auseinander gesetzt hat. Ein Unterprojekt hat sich mit einem Aspekt der agilen Wende in der Softwareentwicklung beschäftigt. Es ist das Unterprojekt Praktiken des Organisierens in der Software-Entwicklung: Extreme Programming des Projektes Die Aufführung der Gesellschaft in Spielen. Wandel des Regelgebrauchs bei Spiel und Arbeit des Sonderforschungsbereiches Kulturen des Performativen an der Humboldt-Universität Berlin. Der Sonderforschungsbereich hat nach 12 Jahren zum 31.12.2010 seine Arbeit eingestellt. Aus dem Unterprojekt ist bisher ein Aufsatz hervorgegangen: Robert Schmidt, Praktiken des Programmierens. Zur Morphologie von Wissensarbeit in der Software-Entwicklung (Schmidt 2008). Im April 2012 wird das neue Buch von Robert Schmidt Soziologie der Praktiken erscheinen, in dem er weitere Ergebnisse seiner Feldforschungen unter Softwareentwickelnden vorstellt. In seinem Aufsatz thematisiert Schmidt explizit die agile Wende in der Softwareentwicklung. Er kennzeichnet sie in Anlehnung an den practical turn in der Soziologie (Reckwitz 2003) ebenfalls als practical turn (Schmidt 2008: 282). Schmidt bezieht sich unter den agilen Methoden vor allem auf das Extreme Programming (Beck 2000). Mit dem Begriff practical turn unterstreicht er eine Rückbesinnung auf die Programmierung, die in der Softwareentwicklung stattgefunden habe. Für das Extreme Programming ist das sicher richtig, für andere agile Methoden gilt es weniger. In seinem Aufsatz beschreibt Schmidt eine videogestützte Ethnographie von Programmierpraktiken.Im angelsächsischen Sprachraum wurden ethnographische Studien zur Programmierarbeit durchgeführt. Insbesondere sei hier auf Ausgabe 2 von TeamEthno-online zum Thema Ethnographies of Code verwiesen (TeamEthno 2006). Das Thema der Agilität wird nur gestreift. Ziel der Papiere ist es, eine Vorstellung vom Programmieren zu entwickeln. Zwei Papiere verweisen auf durchgeführte Untersuchungen des Pairprogramming, einer Programmierpraktik des Extreme Programming (Bryant 2006, Hinds 2006).In An ethnography of XP practice (Sharp 2004) beschreiben die Autoren eine ethnographische Studie, mit der sie die Praxis der Extreme Programming untersucht haben. Sie kommen zu dem Schluss, dass im von ihnen beobachteten XP Theorie und Praxis nicht auseinanderfallen: „However, in contrast, we find here that our study leads to a set of conclusions that do not have a 'debunking' theme.“ (Sharp 2004: 374)Die Art, wie das Feld der Softwareentwicklung durch die agile Wende reorganisiert wird, verweist auf Muster, die von den Gouvernementalitätsstudien (Lemke 2008) sichtbar gemacht wurden. Das Glossar der Gegenwart (Bröckling 2004), welches zeitgenössische Machtpraktiken, die indirekt operieren, expliziert, enthält Stichworte wie: Empowerment, Kundenorientierung, Partizipation, Projekt, Unternehmer. Der strukturell sehr ähnliche Begriff Agilität würde sehr gut in diese Sammlung passen. In einem weiteren Beitrag der Gouvernementalitätsstudien verdichtet Ulrich Bröckling  die Ergebnisse seiner Studien zu einem Bild einer neuen Subjektivierungsform, dem unternehmerischen Selbst (Bröckling 2007). Obwohl die von ihm explizierten Steuerungspraktiken auch das Rückgrat agiler Projektsteuerung bilden, wird auf die agile Wende der  Softwareentwicklung nicht eingegangen.Die Dissertation von Alexandra Rau Psychopolitik. Gouvernementalitäts-theoretische Untersuchungen zu Macht und Subjekt in subjektivierten Arbeitsverhältnissen (Rau 2010), ist der Beitrag der Gouvernementalitäts-studien, der sich explizit mit Programmierarbeit und Gouvernementalität beschäftigt. Das empirische Kernstück der Arbeit bilden 13 biographisch-narrative Interviews mit Beschäftigten der IT-Branche. Sie arbeitet anhand der Interviews 5 Muster heraus. Ein Muster besteht aus strukturellen Bedingungen der Arbeitsverhältnisse als Ausgangspunkt, einer affektiven Dynamik, einem affektiven Effekt, einer Last der Psyche als Erfahrung des Leids und schließlich einer Verteidigung des Selbst (ebenda 293f.). Die Untersuchung beschreibt Erfahrungen, die auch in der agilen Softwareentwicklung gemacht werden. Rau thematisiert die agile Wende nicht. Es wäre sehr spannend, die Frage zu diskutieren, ob die Muster durch agile Arbeitsweisen verschärft, abgemildert oder gar nicht verändert würden.Die postoperaistisch-marxistische Position wie sie von Michael Hardt und Antonio Negri (Hardt 2002) vertreten wird, nähert sich der agilen Wende aus einer gesellschaftstheoretischen Perspektive. Mit der Kategorie der Immateriellen Arbeit (ebenda 302) liefert sie die Folie für Veränderungen von Kommunikationsprozesse innerhalb der Produktion, wie sie auch die agile Wende durchsetzt. Das postoperaistische Erbe - politökonomische Veränderungen aus dem unmittelbaren Arbeitsprozess zu denken - schafft Kategorien, die eine neue Phase des Kapitalismus mit den Veränderungen der Arbeit, wie sie das Glossar der Gegenwart zum Thema haben, vermitteln. Die agile Wende der Softwareentwickler kommt in diesem Zusammenhang nicht explizit zur Sprache.Die Arbeitssoziologie diskutiert die Veränderungen, die auch innerhalb der agilen Wende vollzogen, werden auf einem allgemeineren Niveau. Die von Günther Voß und Hans J. Pongratz eröffnete Diskussion um den Begriff des Arbeitskraftunternehmers (Voß 1998) ist für die Diskussion der agilen Wende interessant. Sie untersuchen strukturelle Veränderungen der Ware Arbeitskraft in Richtung einer erweiterten Selbstkontrolle. Die Veränderungen der Subjektivität werden als Ausdruck einer erweiterten Selbständigkeit der Arbeitenden, auch im juristischen Sinne, untersucht. Die Ergebnisse sind auch für Veränderungen interessant, die sich in klassischen, vertraglich gebundenen, Arbeitnehmern vollziehen, wenn diese mit Arbeitsformen konfrontiert werden, die stärker auf die Selbstorganisation der Beteiligten setzen, wie das bei agilen Methoden der Fall ist.FragestellungWie wird eine neue Subjektform durch die agile Wende im Feld der Softwareentwicklung installiert? Das ist die Frage, die die Dissertation stellen und zu deren Beantwortung sie einen Beitrag leisten möchte. Untersucht werden soll, wie durch eine neue Art über Software zu sprechen und ein Bündel neuer Rituale, mit denen die agile Softwareentwicklung den Prozess steuert, eine neue Subjektform im Feld entsteht. Ein besonderes Augenmerk soll dabei auf die Probleme und Widersprüche gelegt werden. So wie alte - tayloristische - Formen der Arbeit ihre spezifischen Problemlagen erzeugen, soll nach den neuen Problemen gefragt werden, die die agile Form der Arbeit erzeugt. Widersprüche beim Übergang von einer klassischen zu einer agilen Weise der Softwareentwicklung sollen untersucht werden. Eine erste These für die Arbeit ist, dass die Steuerung des Prozesses durch Rituale eine zentrale Rolle für die Herausbildung einer neuen Form der Subjektivität spielt. Die agile Wende führt für alle Zeitintervalle der Softwareentwicklung Rückkopplungsrituale ein. Diese reichen vom strategischen Ritual des Planspiels bis zur Mikrorückkopplung des Pairprogramming. Auch die praktische Seite der Softwareentwicklung, die Programmierung, wird durch Rituale aufgewertet und trainiert. Theoretisch ist hier das 5-Stufenmodell des Lernens, wie es von den Brüdern Dreyfus entwickelt wurde (Dreyfus 1980), wegweisend (Hunt 2009 insbesondere Kapitel 2). Praktisch sind es Anleihen an Rituale des asiatischen Kampfsports, die eingesetzt werden. Für die Entwicklung der Programmierfähigkeiten werden Coding-Dojos abgehalten, Programmierende schulen sich an Programmier-Katas, die mit musikalischer Untermalung als Video veröffentlicht werden. Code-Retreats werden durchgeführt, um den Umgang mit programmiertem Code geschmeidiger zu machen. Die Steuerung und Kultivierung des Softwareeentwicklungsprozesses durch Rituale ist ein wesentlicher Unterschied zu klassischen Methoden, die den Prozess vor allem durch festgelegte Dokumente steuern.Die informatische Frage an die agile Wende soll nicht gestellt werden: Es soll nicht diskutiert werden, mit welcher Methodik bessere Software zu entwickeln ist oder in welchem Projektkontext welche Methodik angemessener sei.MethodeDie Dissertation soll ihr Thema unter drei Blickwinkeln betrachten: das Sprechen über Softwareentwicklung, die Rituale der Softwareentwicklung und die Subjekte der Softwareentwicklung. Für die unterschiedlichen Blickwinkel sollen unterschiedliche Methoden gewählt werden.Der erste Aspekt - das Sprechen über Softwareentwicklung - soll mit einer epistemologischen Analyse der Differenz des klassischen und des agilen Diskurses untersucht werden. Paradigmatisch für dieses Herangehen ist Michel Foucaults Studie Die Ordnung der Dinge (Foucault 1991). Der zweite Aspekt - die Rituale der Softwareentwicklung - soll mit den Mitteln der Gouvernementalitätsstudien untersucht werden. Dafür wird die agile Wende der Softwareentwicklung als Regierungsprogramm gelesen. Der Begriff der Regierung hat in der Lesart Thomas Lemkes eine doppelte Scharnierfunktion (Lemke 2008b: 261). Erstens vermittle er zwischen Herrschaft und Praktiken des Selbst, zweitens zwischen Machttechniken und Wissensformen. Diese beiden Vermittlungen sollen im Feld der Softwareentwicklung untersucht werden. Wie verbinden sich Diskurs und Rituale der agilen Wende? Wie sind die Praktiken des Selbst und Rituale der Softwareentwicklung miteinander vermittelt?Der dritte Aspekt - die Subjektform der agilen Softwareentwickelnden - wird bereits in der Perspektive der Gouvernementalitätsstudien in den Blick genommen. Lemke führt zwei Kritikpunkte an diesem Ansatz an, die auch für die Fragestellung meiner Arbeit relevant sind. „Erstens beziehen viele Gouvernementalitätsstudien Kämpfe und Konflikte nur unzureichend in die Analyse ein und betonen demgegenüber die Kohärenz und Konsistenz der untersuchten Regierungstechnologien.“ (Lemke 2008a: 383) „Zweitens neigen viele Gouvernementalitätsstudien dazu, die politische Bedeutung expressiver und emotionaler Faktoren zugunsten bewusster Kalküle und rationaler Konzepte zu vernachlässigen.“ (ebenda) Gouvernementalitätsstudien helfen insofern das Regierungsprogramm - auch seine subjektive Seite - sichtbar zu machen. Sie sind nicht das erste Instrument, um Widerstände und Probleme aufzuzeigen. Die Studien scheinen die Tendenz zu haben, konkrete Subjektivität zu überspringen. Die Frage, mit welcher Methodik die ersten zwei Aspekte zu ergänzen sind, um der Forschungsfrage nach den Problemen und Widerständen gerecht zu werden, ist die zentrale methodologische Frage der Dissertation. In Betracht gezogen werden sollen hier Ansätze aus dem Feld einer soziologischen Praxistheorie (Reckwitz 2003) und ethnographische Ansätze aus dem Feld der Programmierarbeit (TeamEthno-online 2006).Gliederung der ArbeitDie Arbeit gliedert sich in drei Abschnitte. Die Abschnitte fragen nach dem Sprechen über Softwareentwicklung, den Rituale der Softwareentwicklung und den Subjekten der Softwareentwicklung. Thematisiert werden sollen die Auswirkungen, die von der agilen Wende initiiert wurden.Das Thema des ersten Abschnittes der Arbeit ist der Diskurs der Agilität. Zunächst werden kurz traditionelle Positionen der Softwareentwicklung dargestellt. In einer ausführlichen Analyse des Agilen Manifestes werden dann die Verschiebungen des Sprechens über Softwareentwicklung sichtbar gemacht, die das Manifest vornimmt. Der dritte Teil des ersten Abschnitts untersucht die Genese der Positionen der 17 Erstunterzeichner des Manifestes in den 90er Jahren. Es soll gezeigt werden, wie sie ihre Positionen langsam aus der Untersuchung erfolgreicher Projekte herausdestillieren. Der vierte Teil resümiert die vorhergehenden Abschnitte und arbeitet noch einmal die Bedeutung von Ritualen für die agile Weise der Projektsteuerung heraus.Der zweite Abschnitt der Arbeit untersucht die Rituale, die durch die agile Wende im Feld der Softwareentwicklung installiert werden. In drei Teilen werden drei Arten von Ritualen untersucht. Es gibt erstens Rituale der Projektsteuerung, zweitens Rituale der Programmierung und drittens Metarituale, die dazu dienen, die anderen Rituale zu reflektieren und anzupassen. Die Teile sollen die Sichtbarkeiten und Sagbarkeiten aufzeigen, die durch die Rituale der agilen Wende installiert wurden. Gleichzeitig zeigen die Rituale eine Norm agiler Subjektivität auf, in die hinein sich die konkreten Subjekte sozialisieren könnten.Der dritte Abschnitt hat die konkreten Subjekte agiler Softwareentwicklung zum Thema. Offen ist, ob an dieser Stelle die methodologische Diskussion, von der oben die Rede war, offen gelegt wird oder ob lediglich ihre Resultate dargestellt werden. Ziel des Abschnittes ist es die Subjektformen aufzuzeigen, die im Feld entstehen, und dabei auch Widerstände und Probleme aufzunehmen. Genaueres zu den Gliederungspunkten dieses Abschnittes lässt sich erst sagen, wenn das methodologische Problem bearbeitet ist.LiteraturBeck, K.: Extreme Programming Explained. Embrace Change. Addison-Wesley 2000.Beck, K./Beedle, M./v. Bennekum A./Cunningham, W./Fowler, M./Grenning, J./Highsmith, J./Hunt A./Jeffries, R./Kern, J./Marick, B./Martin, R. C./Mellor, S./Schwaber, K./Sutherland, J/Thomas, D.: Manifesto for Agile Software Development (http://agilemanifesto.org/), 2001.Bröckling, U./Krasmann, S./Lemke, T.: Glossar der Gegenwart, Frankfurt am Main 2004.Bröckling, U.: Das unternehmerische Selbst, Frankfurt am Main 2007.Bryant, S./Romero, P./Bouley, B. du: Unpicking the pair programming process. In: TeamEthno-online 2006.Dreyfus, S. E. /Dreyfus, H.: A five-stage model of the mental activities involved in directed skill acquisition. ORC 80-2, Operations Research Center, University of California, Berkeley, 1980.Foucault, M.: Die Ordnung der Dinge. Eine Archäologie der Humanwissenschaften. Frankfurt am Main 1991.Hardt, M./Negri, A.: Empire. Die neue Weltordnung, Frankfurt/New York 2002.Himmelreich, J.: Agile Softwareentwicklung nach Winston Roycein: Agiles Projektmanagement, Beiträge zur Konferenz InterPM, Glashütten 2006.Hinds, C./Mates, O. /Jirotka, M.: Ethnographies of code: Coordination between pairs in agile pair programming. In: TeamEthno-online 2006.Hunt, A.: Pragmatisches Denken und Handeln. Refactor Your Wetware! München 2009.Kammler, C./Parr, R./Schneider, U. J.: Foucault-Handbuch. Stuttgart, Weimar 2008.Larman, C./Basili, V. R.: Iterativ and Incremental Development. In: IEEE Computer (IEEE Computer Society) 36 (6) 2003: 47–56.Larsen, D.: http://www.infoq.com/articles/agile-alliance-survey-2006 2006.Lemke, T.: Gouvernementality Studies, 2008a. In: Kammler 2008.Lemke, T.: Gouvernementalität, 2008b. In: Kammler 2008.Naur, P./Randell, B. (Hrsg.): Software Engineering: Report of a conference sponsored by the NATO Science Committee, Garmisch, Germany, 7-11 Oct. 1968 NATO Scientific Affairs Division, Brüssel 1969. (siehe auch: http://homepages.cs.ncl.ac.uk/brian.randell/NATO/nato1968.PDF)Voß, G./Pongratz, H. J.: Der Arbeitskraftunternehmer.Eine neue Grundform der Ware Arbeitskraft? In: Kölner Zeitschrift für Soziologie und Sozialpsychologie, Jhg. 50 (1), 1998 (S. 131-158).Rau, A.: Psychopolitik. Gouvernementalitätstheoretische Untersuchungen zu Macht und Subjekt in subjektivierten Arbeitsverhältnissen.Inauguraldissertation zur Erlangung des Grades eines Doktors der Philosophie im Fachbereich Gesellschaftswissenschaften der Johann-Wolfgang-Goethe-Universität zu Frankfurt am Main, Frankfurt a.M. 2010.Reckwitz, A.: Grundelemente einer Theorie sozialer Praktiken. Eine sozialtheoretische Perspektive. In: Zeitschrift für Soziologie 32, 2003.Royce, W. R.: Managing the Development of Large Software Systems in: Proceedings. IEEE WESCON. August 1970.Schmidt, R.: Praktiken des Programmierens Zur Morphologie von Wissensarbeit in der Software-Entwicklung. In: Zeitschrift für Soziologie 37, 2008.Schwaber, K./Beedle, M.: Agile Software Development with Scrum. Prentice Hall 2001.Sharp, H./Robinson, H.: An Ethnographic Study of XP Practice. In: Empirical Software Engineering 9: 353–375: 2004.TeamEthno-online: Team Ethno Online. Issue 2, 2006 (siehe auch: http://www.teamethno-online.org.uk)v-modell-xt: http://www.v-modell-xt.de/1 Dass es auch immer eine Unterströmung gab, die die weiter unten beschriebenen agilen Werte vertrat, zeigen Larman und Basili (Larman 2003). Dass sich diese Unterströmung auch bei Royce findet zeigt Himmelreich (Himmelreich 2006).2 Der eigentlich Kunstgriff des Manifestes, der in der Arbeit zu analysieren sein wird, hier aber nicht unterschlagen werden soll, besteht in seiner Formulierung. Die Werte werden nicht aufgezählt, sondern jeweils einem anderen Wert, den man auch aber nicht so hoch schätze, gegenübergestellt. Erst aus dieser Gegenüberstellung gewinnt das Manifest seine Prägnanz.